@model TMDT.Models.Address

@{
    ViewBag.Title = "LocaAdd";
    Layout = "~/Areas/KhachHang/Views/Shared/_LayoutPageUS.cshtml";
}

<div class="col-sm-12 col-md-9 col-lg-9">

    <div class="alert alert-info">
        @TempData["Message"]
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.numberPhone, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.numberPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.numberPhone, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.address1, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.address1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address1, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.priority, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="checkbox">
                        @Html.EditorFor(model => model.priority)
                        @Html.ValidationMessageFor(model => model.priority, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.note, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group" style="text-align:right">

                <input type="submit" value="Xác nhận" class="btn btn-default" />

            </div>
        </div>
    }

    <style>
        /* Định dạng nút Save */
        .btn-primary {
            display: inline-block;
            padding: 10px 20px;
            background-color: #d19797; /* Màu nền của nút */
            color: #fff; /* Màu chữ trắng */
            text-align: center;
            text-decoration: none;
            border: none;
            border-radius: 4px; /* Bo tròn viền */
            cursor: pointer;
            transition: background-color 0.3s; /* Hiệu ứng màu nền thay đổi khi hover */
        }

            .btn-primary:hover {
                background-color: #a27070; /* Màu nền khi hover */
                color: #71706f;
            }

        /* Định dạng label và input */
        .control-label {
            font-weight: bold;
        }

        .form-control {
            border: 1px solid #ccc;
            border-radius: 4px;
            padding: 8px;
            width: 100%;
            box-sizing: border-box;
        }

        /* Định dạng form group và form horizontal */
        .form-group {
            margin-bottom: 20px;
        }

        .form-horizontal .control-label {
            text-align: right;
            margin-top: 8px;
        }

        /* Chia form thành 2 cột */
        .row {
            display: flex;
            justify-content: space-between;
        }

        .col-md-6 {
            flex-basis: calc(50% - 10px);
        }

        /* Định dạng phần tiêu đề */
        h2 {
            color: #000;
            margin-bottom: 20px;
        }

        /* Định dạng nút Back to List */
        a.btn-default {
            background-color: #ccc;
            color: #000;
            border: none;
            border-radius: 4px;
            padding: 10px 20px;
            text-decoration: none;
            display: inline-block;
            margin-top: 10px;
        }

            a.btn-default:hover {
                background-color: #999;
            }


        .alert {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            padding: 15px;
            border: 1px solid transparent;
            border-radius: 4px;
            background-color: #d9edf7;
            color: #31708f;
        }
    </style>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var alertElement = document.querySelector('.alert');

            // Ẩn thông báo sau 5 giây (5000 milliseconds)
            setTimeout(function () {
                alertElement.style.display = 'none';
            }, 2000);
        });
    </script>

</div>
