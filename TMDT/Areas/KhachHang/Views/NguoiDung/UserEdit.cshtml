@model TMDT.Models.User
@{
    ViewBag.Title = "UserEdit";
    Layout = "~/Areas/KhachHang/Views/Shared/_LayoutPageUS.cshtml";

}

<div class="col-sm-12 col-md-10 col-lg-10">
    <h2 style="color: #ad6868">Chỉnh sửa thông tin cá nhân </h2>
    <div class="usered">
        @using (Html.BeginForm("UserEdit", "NguoiDung", FormMethod.Post, new { @class = "tm-login-form", enctype = "multipart/form-data" }))
        {

            @Html.AntiForgeryToken()
      
        <div class="row">
            <div class="col-xl-6 col-lg-6 col-md-12 mx-auto">
                <div class="tm-product-img-dummy mx-auto">
                    <label for="imageInput" class="upload-button">
                        <img src="#" id="myImage" class="rounded mx-auto d-block img-preview"  />
                        <div class="overlay">
                            <span>Thay đổi ảnh</span>
                        </div>
                    </label>
                    <input type="file" name="HinhAnh" id="imageInput" style="display: none;" />
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <h6>Số Điện Thoại</h6>
                    @Html.EditorFor(model => model.numberPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.numberPhone, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <h6>Mail</h6>
                    @Html.EditorFor(model => model.gmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.gmail, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <h6>Ngày Sinh</h6>
                    @Html.EditorFor(model => model.bDay, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bDay, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <h6>Mật Khẩu</h6>
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <h6>Họ Tên</h6>
                    @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <h6>Giới Tính</h6>
                    @Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                </div>

                <!-- Thêm các trường khác vào cột này nếu cần -->

            </div>
            

            <div class="form-group" style="text-align:right">
                <input type="submit" value="Lưu " class="btn btn-primary" />
            </div>
        </div>

        }
    </div>




    <style>
        .usered {
            background-color: #ffcece;
            padding: 10px;
        }

        .btn {
            float: right
        }
        /* Định dạng label và input */
        .control-label {
            font-weight: bold;
        }

        .form-control {
            border: 1px solid #ccc;
            border-radius: 10px;
            padding: 8px;
            width: 100%;
            box-sizing: border-box;
        }

        /* Định dạng form group và form horizontal */
        .form-group {
            margin-bottom: 20px;
        }

        .form-horizontal .control-label {
            text-align: right;
            margin-top: 8px;
        }

        <!-- Chia form thành 2 cột -->
        .row {
            display: flex;
            justify-content: space-between;
        }


        /* Định dạng nút Back to List */
        a.btn-default {
            background-color: #ccc;
            color: #000;
            border: none;
            border-radius: 4px;
            padding: 10px 20px;
            text-decoration: none;
            display: inline-block;
            margin-top: 10px;
        }

            a.btn-default:hover {
                background-color: #999;
            }


        /* Thay đổi CSS */
        .tm-product-img-dummy {
            position: relative;
            overflow: hidden;
            width: 250px;
            height: 300px;
            border: 2px dashed #ccc;
            border-radius: 10px;
        }

        .img-preview {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease-in-out;
        }

        .overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: rgba(0, 0, 0, 0.5);
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
        }

        .upload-button {
            display: block;
            cursor: pointer;
        }

            .upload-button:hover .overlay {
                opacity: 1;
            }

            .upload-button:hover .img-preview {
                transform: scale(1.1);
            }

        .overlay span {
            color: white;
            font-size: 16px;
            font-weight: bold;
        }

    </style>

</div>

@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>$(document).ready(function () {

            $("#imageInput").change(function () {
                const file = this.files[0];
                const reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = function () {
                    $("#myImage").attr("src", reader.result);
                };
            });



        });</script>
}   